CREATE TABLE students (
  student_id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL, 
  father_name VARCHAR(100) NOT NULL, 
  username VARCHAR(50) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,  -- Store hashed password here
  email VARCHAR(100) NOT NULL,
  mobile_number VARCHAR(15),
  profile_image LONGBLOB,
  class VARCHAR(20),
  
  status VARCHAR(20) DEFAULT 'Active',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create the notices table
CREATE TABLE notices (
  notice_id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(200) NOT NULL,
  description TEXT NOT NULL,
  posted_on DATE NOT NULL,
  category VARCHAR(50) DEFAULT 'General'
);

-- Create the actions table
CREATE TABLE actions (
  action_id INT AUTO_INCREMENT PRIMARY KEY,
  student_id INT NOT NULL,
  action_type VARCHAR(50) NOT NULL,
  action_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (student_id) REFERENCES students(student_id)
);

-- Create the reports table (optional, if you plan to store downloadable reports)
CREATE TABLE reports (
  report_id INT AUTO_INCREMENT PRIMARY KEY,
  student_id INT NOT NULL,
  report_name VARCHAR(255) NOT NULL,
  file_path VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (student_id) REFERENCES students(student_id)
);

-- Create the academic_history table (optional, if you want to track academic history)
CREATE TABLE academic_history (
  history_id INT AUTO_INCREMENT PRIMARY KEY,
  student_id INT NOT NULL,
  year INT NOT NULL,
  class VARCHAR(20),
  grade VARCHAR(10),
  status ENUM('Passed', 'Failed', 'Pending') DEFAULT 'Pending',
  FOREIGN KEY (student_id) REFERENCES students(student_id)
);


this is my database code for REFERENCES.
not the complete one... will update the latest one later after completion of task